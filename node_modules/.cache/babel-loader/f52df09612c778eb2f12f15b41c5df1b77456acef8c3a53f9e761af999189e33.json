{"ast":null,"code":"var _jsxFileName = \"/Users/parksunggyu/gukbap-FE/src/components/RestaurantMap.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport RegisterButton from './RegisterButton';\nimport MarkerInfo from './MarkerInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KAKAO_APP_KEY = '13ae7eab289fd28ffbdc282b63f4f621';\nconst loadKakaoMaps = () => {\n  return new Promise((resolve, reject) => {\n    if (window.kakao && window.kakao.maps) {\n      resolve(window.kakao.maps);\n    } else {\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${KAKAO_APP_KEY}&libraries=services&autoload=false`;\n      script.onload = () => window.kakao.maps.load(() => resolve(window.kakao.maps));\n      script.onerror = reject;\n      document.head.appendChild(script);\n    }\n  });\n};\nconst RestaurantMap = () => {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const [markerInfo, setMarkerInfo] = useState(null);\n  const mapRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [kakaoMaps, setKakaoMaps] = useState(null);\n  const [registeredMarkers, setRegisteredMarkers] = useState([]);\n  const [searchMarkers, setSearchMarkers] = useState([]);\n  const clearSearchMarkers = () => {\n    searchMarkers.forEach(marker => marker.setMap(null));\n    setSearchMarkers([]);\n  };\n  useEffect(() => {\n    let isMounted = true;\n    loadKakaoMaps().then(maps => {\n      if (isMounted) {\n        setKakaoMaps(maps);\n      }\n    }).catch(error => console.error('Failed to load Kakao Maps:', error));\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n  useEffect(() => {\n    if (kakaoMaps && mapRef.current && !map) {\n      const options = {\n        center: new kakaoMaps.LatLng(37.566826, 126.9786567),\n        level: 3\n      };\n      const newMap = new kakaoMaps.Map(mapRef.current, options);\n      setMap(newMap);\n      loadRegisteredMarkers(newMap, kakaoMaps);\n    }\n  }, [kakaoMaps, map]);\n  const loadRegisteredMarkers = async (mapInstance, maps) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('http://localhost:8080/api/v1/restaurant', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'ngrok-skip-browser-warning': true\n        }\n      });\n      const newMarkers = response.data.map(restaurant => displayMarker(mapInstance, maps, restaurant, true));\n      setRegisteredMarkers(newMarkers);\n    } catch (error) {\n      console.error('Failed to load registered markers:', error);\n    }\n  };\n  const handleSearch = e => {\n    e.preventDefault();\n    if (map && kakaoMaps && searchQuery) {\n      const ps = new kakaoMaps.services.Places();\n      ps.keywordSearch(searchQuery, (data, status) => {\n        if (status === kakaoMaps.services.Status.OK) {\n          const place = data[0]; // Get the first result\n\n          // Check in both registered and search markers\n          const existingRegisteredMarker = registeredMarkers.find(marker => marker.getPosition().getLat().toFixed(7) === parseFloat(place.y).toFixed(7) && marker.getPosition().getLng().toFixed(7) === parseFloat(place.x).toFixed(7));\n          const existingSearchMarker = searchMarkers.find(marker => marker.getPosition().getLat().toFixed(7) === parseFloat(place.y).toFixed(7) && marker.getPosition().getLng().toFixed(7) === parseFloat(place.x).toFixed(7));\n          if (existingRegisteredMarker || existingSearchMarker) {\n            // If a marker already exists at this location, center the map on it\n            clearSearchMarkers();\n            const existingMarker = existingRegisteredMarker || existingSearchMarker;\n            map.setCenter(existingMarker.getPosition());\n            map.setLevel(3); // Zoom in to a closer level\n            setSelectedPlace(place);\n            setMarkerInfo(place);\n          } else {\n            // If no marker exists, clear existing search markers and create a new one\n            clearSearchMarkers();\n            const bounds = new kakaoMaps.LatLngBounds();\n            const newMarker = displayMarker(map, kakaoMaps, place, false);\n            setSearchMarkers([newMarker]);\n            bounds.extend(newMarker.getPosition());\n            map.setBounds(bounds);\n            setSelectedPlace(place);\n            setMarkerInfo(place);\n          }\n        }\n      });\n    }\n  };\n  const displayMarker = (mapInstance, maps, place, isRegistered) => {\n    const markerPosition = new maps.LatLng(place.y, place.x);\n    let markerImage;\n    if (isRegistered) {\n      markerImage = new maps.MarkerImage('https://velog.velcdn.com/images/steven0507/post/89548d24-4b92-458d-b135-88026b9da1fc/image.png', new maps.Size(32, 32), {\n        offset: new maps.Point(16, 32)\n      });\n    }\n    const marker = new maps.Marker({\n      map: mapInstance,\n      position: markerPosition,\n      image: isRegistered ? markerImage : null\n    });\n    maps.event.addListener(marker, 'click', () => {\n      setSelectedPlace(place);\n      setMarkerInfo(place);\n    });\n    return marker;\n  };\n  useEffect(() => {\n    if (map && kakaoMaps) {\n      kakaoMaps.event.addListener(map, 'zoom_changed', () => {\n        console.log('Zoom level changed');\n        if (selectedPlace) {\n          setSelectedPlace(selectedPlace);\n        }\n      });\n    }\n  }, [map, kakaoMaps, selectedPlace]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"restaurant-map\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSearch,\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchQuery,\n        onChange: e => setSearchQuery(e.target.value),\n        placeholder: \"Search for restaurants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      className: \"map-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), markerInfo && /*#__PURE__*/_jsxDEV(MarkerInfo, {\n      place: markerInfo,\n      onClose: () => setMarkerInfo(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(RestaurantMap, \"tQH0JgQZmbcskCM1ua/nHX4aPjc=\");\n_c = RestaurantMap;\nexport default RestaurantMap;\nvar _c;\n$RefreshReg$(_c, \"RestaurantMap\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","RegisterButton","MarkerInfo","jsxDEV","_jsxDEV","KAKAO_APP_KEY","loadKakaoMaps","Promise","resolve","reject","window","kakao","maps","script","document","createElement","type","src","onload","load","onerror","head","appendChild","RestaurantMap","_s","searchQuery","setSearchQuery","selectedPlace","setSelectedPlace","markerInfo","setMarkerInfo","mapRef","map","setMap","kakaoMaps","setKakaoMaps","registeredMarkers","setRegisteredMarkers","searchMarkers","setSearchMarkers","clearSearchMarkers","forEach","marker","isMounted","then","catch","error","console","current","options","center","LatLng","level","newMap","Map","loadRegisteredMarkers","mapInstance","token","localStorage","getItem","response","get","headers","Authorization","newMarkers","data","restaurant","displayMarker","handleSearch","e","preventDefault","ps","services","Places","keywordSearch","status","Status","OK","place","existingRegisteredMarker","find","getPosition","getLat","toFixed","parseFloat","y","getLng","x","existingSearchMarker","existingMarker","setCenter","setLevel","bounds","LatLngBounds","newMarker","extend","setBounds","isRegistered","markerPosition","markerImage","MarkerImage","Size","offset","Point","Marker","position","image","event","addListener","log","className","children","onSubmit","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClose","_c","$RefreshReg$"],"sources":["/Users/parksunggyu/gukbap-FE/src/components/RestaurantMap.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport RegisterButton from './RegisterButton';\nimport MarkerInfo from './MarkerInfo';\n\n\nconst KAKAO_APP_KEY = '13ae7eab289fd28ffbdc282b63f4f621';\n\nconst loadKakaoMaps = () => {\n  return new Promise((resolve, reject) => {\n    if (window.kakao && window.kakao.maps) {\n      resolve(window.kakao.maps);\n    } else {\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${KAKAO_APP_KEY}&libraries=services&autoload=false`;\n      script.onload = () => window.kakao.maps.load(() => resolve(window.kakao.maps));\n      script.onerror = reject;\n      document.head.appendChild(script);\n    }\n  });\n};\n\nconst RestaurantMap = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  const [markerInfo, setMarkerInfo] = useState(null);\n  const mapRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [kakaoMaps, setKakaoMaps] = useState(null);\n  const [registeredMarkers, setRegisteredMarkers] = useState([]);\n  const [searchMarkers, setSearchMarkers] = useState([]);\n\n\n  const clearSearchMarkers = () => {\n    searchMarkers.forEach(marker => marker.setMap(null));\n    setSearchMarkers([]);\n  };\n\n  useEffect(() => {\n    let isMounted = true;\n    loadKakaoMaps()\n      .then((maps) => {\n        if (isMounted) {\n          setKakaoMaps(maps);\n        }\n      })\n      .catch((error) => console.error('Failed to load Kakao Maps:', error));\n\n    return () => {\n      isMounted = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (kakaoMaps && mapRef.current && !map) {\n      const options = {\n        center: new kakaoMaps.LatLng(37.566826, 126.9786567),\n        level: 3\n      };\n      const newMap = new kakaoMaps.Map(mapRef.current, options);\n      setMap(newMap);\n      loadRegisteredMarkers(newMap, kakaoMaps);\n    }\n  }, [kakaoMaps, map]);\n\n  const loadRegisteredMarkers = async (mapInstance, maps) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get('http://localhost:8080/api/v1/restaurant', {\n        headers: { \n          Authorization: `Bearer ${token}`,\n          'ngrok-skip-browser-warning': true\n        }\n      });\n      const newMarkers = response.data.map(restaurant => \n        displayMarker(mapInstance, maps, restaurant, true)\n      );\n      setRegisteredMarkers(newMarkers);\n    } catch (error) {\n      console.error('Failed to load registered markers:', error);\n    }\n  };\n\n  const handleSearch = (e) => {\n  e.preventDefault();\n  if (map && kakaoMaps && searchQuery) {\n    const ps = new kakaoMaps.services.Places();\n    ps.keywordSearch(searchQuery, (data, status) => {\n      if (status === kakaoMaps.services.Status.OK) {\n        const place = data[0]; // Get the first result\n        \n        // Check in both registered and search markers\n        const existingRegisteredMarker = registeredMarkers.find(marker => \n          marker.getPosition().getLat().toFixed(7) === parseFloat(place.y).toFixed(7) && \n          marker.getPosition().getLng().toFixed(7) === parseFloat(place.x).toFixed(7)\n        );\n\n        const existingSearchMarker = searchMarkers.find(marker => \n          marker.getPosition().getLat().toFixed(7) === parseFloat(place.y).toFixed(7) && \n          marker.getPosition().getLng().toFixed(7) === parseFloat(place.x).toFixed(7)\n        );\n\n        if (existingRegisteredMarker || existingSearchMarker) {\n          // If a marker already exists at this location, center the map on it\n          clearSearchMarkers();\n          const existingMarker = existingRegisteredMarker || existingSearchMarker;\n          map.setCenter(existingMarker.getPosition());\n          map.setLevel(3); // Zoom in to a closer level\n          setSelectedPlace(place);\n          setMarkerInfo(place);\n        } else {\n          // If no marker exists, clear existing search markers and create a new one\n          clearSearchMarkers();\n          const bounds = new kakaoMaps.LatLngBounds();\n          const newMarker = displayMarker(map, kakaoMaps, place, false);\n          setSearchMarkers([newMarker]);\n          bounds.extend(newMarker.getPosition());\n          map.setBounds(bounds);\n          setSelectedPlace(place);\n          setMarkerInfo(place);\n        }\n      }\n    });\n  }\n};\n  const displayMarker = (mapInstance, maps, place, isRegistered) => {\n    const markerPosition = new maps.LatLng(place.y, place.x);\n    let markerImage;\n  \n    if (isRegistered) {\n      markerImage = new maps.MarkerImage(\n        'https://velog.velcdn.com/images/steven0507/post/89548d24-4b92-458d-b135-88026b9da1fc/image.png',\n        new maps.Size(32, 32),\n        { offset: new maps.Point(16, 32) }\n      );\n    }\n  \n    const marker = new maps.Marker({\n      map: mapInstance,\n      position: markerPosition,\n      image: isRegistered ? markerImage : null\n    });\n  \n    maps.event.addListener(marker, 'click', () => {\n      setSelectedPlace(place);\n      setMarkerInfo(place);\n    });\n  \n    return marker;\n  };\n \n  useEffect(() => {\n    if (map && kakaoMaps) {\n      kakaoMaps.event.addListener(map, 'zoom_changed', () => {\n        console.log('Zoom level changed');\n        if (selectedPlace) {\n          setSelectedPlace(selectedPlace);\n        }\n      });\n    }\n  }, [map, kakaoMaps, selectedPlace]);\n\n  return (\n    <div className=\"restaurant-map\">\n      <form onSubmit={handleSearch} className=\"search-bar\">\n        <input\n          type=\"text\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n          placeholder=\"Search for restaurants\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <div ref={mapRef} className=\"map-container\"></div>\n      \n      {markerInfo && <MarkerInfo place={markerInfo} onClose={() => setMarkerInfo(null)} />}\n    </div>\n  );\n};\n\nexport default RestaurantMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}